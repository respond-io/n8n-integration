on:
  pull_request:
    types: [closed]
    branches:
      - 'dev'

name: Release Dev

permissions:
  contents: write
  pull-requests: write
  packages: write
  issues: write

jobs:
  audit:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    continue-on-error: true
    outputs:
      audit_passed: ${{ steps.audit.outcome == 'success' }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://npm.pkg.github.com'
      - run: npm ci --ignore-scripts
      - name: Run audit
        id: audit
        run: npm audit --omit=dev

  tests:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: audit
    continue-on-error: true
    outputs:
      tests_passed: ${{ steps.run_tests.outcome == 'success' }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://npm.pkg.github.com'
      - run: npm ci --ignore-scripts
      - name: Run tests
        id: run_tests
        run: npm test

  create_release:
    if: github.event.pull_request.merged == true && needs.tests.outputs.tests_passed == 'true'
    needs: [audit, tests]
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@v4.2.0
        id: release
        with:
          target-branch: dev
          config-file: .github/release-please-dev-config.json
          manifest-file: .github/.release-please-dev-manifest.json

  publish_release:
    if: github.event.pull_request.merged == true && needs.create_release.outputs.release_created == 'true'
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://npm.pkg.github.com'
      - run: npm ci --ignore-scripts
      - run: npm run release:dev
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify_slack:
    needs: [audit, tests, create_release, publish_release]
    if: always() && needs.publish_release.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Extract package name
        id: package_info
        run: |
          echo "PACKAGE_NAME=$(jq -r .name package.json)" >> $GITHUB_OUTPUT
      - name: Extract package version
        id: package_version
        run: |
          echo "PACKAGE_VERSION=$(jq -r .version package.json)" >> $GITHUB_OUTPUT
      - name: Slack Notification
        run: |
          curl -L \
            -X POST \
            ${{ secrets.SLACK_PACKAGE_RELEASE_WORKFLOW_URL }} \
            -H "Content-Type: application/json" \
            -d "{\"package_name\":\"${{ steps.package_info.outputs.PACKAGE_NAME }}-v${{ steps.package_version.outputs.PACKAGE_VERSION }}\"}"